---
title: "Untitled"
format: html
---

# Converence

```{r}
pacman::p_load(
  tidyverse
)

Sim <- function(n){
  C <- 10^n
  Temp <- tibble(
    SqrtN = (10/C^(1/2)),
    SqrtN1000 = (20/C^(1/2)),
    OneN = (10/C^(1)),
    QuadN = (10/C^(1/4)),
    N = n
  )
  return(Temp)
}

map_dfr(0:6,Sim) |> 
  mutate(
    Label = str_c("10の",N,"乗")
  ) |> 
  ggplot(
    aes(
      x = N,
      y = SqrtN
    )
  ) +
  theme_bw() +
  geom_line() +
  geom_line(
    aes(
      y = SqrtN1000,
      color = "1000"
    )
  ) +
  geom_line(
    aes(
      y = QuadN,
      color = "4th"
    )
  ) +
  geom_line(
    aes(
      y = OneN,
      color = "One"
    )
  )
```

# Variance

$$E[(Y-\mu)^2]=E[(Y-\mu_P+\mu_P-\mu)^2]$$

$$=E[(Y-\mu_P)^2]+E[(\mu_P-\mu)^2]+2E[(Y-\mu_P)(\mu_P-\mu)]$$

```{r}
pacman::p_load(
  tidyverse
)

SimData <- function(i,n){
  set.seed(i)
  Temp <- tibble(
    Y = rnorm(n,5,1)
  )
}


Sim <- function(i,n){
  TempData <- SimData(i,n)
  Temp <- tibble(
    OrgacleGap = mean(((TempData$Y)-5)^2) - 1,
    Linear = mean(TempData$Y) - 5,
    Quad = (mean(TempData$Y)-5)^2,
    Res = mean((TempData$Y-5)*(mean(TempData$Y) - 5)),
    N = n
  )
  return(Temp)
}

map_dfr(100:5000,function(n){Sim(1,n)}) |> 
  mutate(
    Label = str_c("10の",N,"乗")
  ) |> 
  ggplot(
    aes(
      x = N,
      y = Linear,
      color = "Linear"
    )
  ) +
  theme_bw() +
  geom_line() +
  geom_line(
    aes(
      y = Quad,
      color = "Quadratic"
    )
  ) +
  geom_line(
    aes(
      y = OrgacleGap,
      color = "Oracle Error"
    )
  ) +
  geom_line(
    aes(
      y = Res,
      color = "Residual"
    )
  )
```

## Distribution

```{r}
Sim <- function(i,n){
  TrainData <- SimData(999,n)
  TempData <- SimData(i,n)
  Temp <- tibble(
    OrgacleGap = mean(((TempData$Y)-5)^2) - 1,
    Linear = mean(TempData$Y) - 5,
    Quad = (mean(TempData$Y)-5)^2,
    Res = mean((TempData$Y-5)*(mean(TempData$Y) - 5)),
    CrossRes = mean((TempData$Y-5)*(mean(TrainData$Y) - 5)),
    N = n
  )
  return(Temp)
}

map_df(1:100,function(i){Sim(i,30)}) |> 
  ggplot(
    aes(
      x = Res,
      fill = "NoCross"
    ),
      alpha = 0.5
  ) +
  theme_bw() +
  geom_histogram() +
  geom_histogram(
    aes(
      x = CrossRes,
      fill = "CrossFit"
    ),
      alpha = 0.5
  )

```

