---
title: "Untitled"
format: html
execute: 
  warning: false
  message: false
---

# SetUp

```{r SetUp}
pacman::p_load(
  tidyverse,
  rpart
)

SimData <- function(i,n){
  set.seed(i)
  TempData <- tibble(
    X = runif(n,-2,2)
  ) |> 
    mutate(
      TrueY = X,
      U = runif(n,-100,100)
    ) |> 
    mutate(Y = TrueY + U)
  return(TempData)
}
```


# Traditional Tree

```{r}
TempEst <- function(i,N){
  TempData <- SimData(i,N) |> 
    mutate(G = if_else(X >= 0,1,0)) |> 
    mutate(MeanU = mean(U),
           .by = G) |> 
    distinct(MeanU,G) |> 
    mutate(N = N)
  return(TempData)
}

map_dfr(
  1:1000,
  function(i){TempEst(i,5000)}
  ) |> 
  bind_rows(
    map_dfr(
  1:1000,
  function(i){TempEst(i,100)}
  )
  ) |> 
  ggplot(
    aes(
      x = MeanU
      )
    ) +
  theme_bw() +
  geom_vline(xintercept = 0) +
  geom_histogram() +
  facet_grid(N~ G) +
  xlim(-30,30)
```



# Adaptive Tree

```{r}
TempEst <- function(i,N){
  TempPred <- rpart(
    Y ~ X,
    SimData(i,N),
    control = rpart.control(
      maxdepth = 1,
      minbucket = 50,
      minsplit = 50,
      cp = 0
      )
    ) |> 
    predict(SimData(i,N))
  TempData <- SimData(i,N) |> 
    mutate(G = if_else(TempPred == max(TempPred),1,0)) |> 
    mutate(MeanU = mean(U),
           .by = G) |> 
    distinct(MeanU,G) |> 
    mutate(N = N)
  return(TempData)
}

map_dfr(
  1:1000,
  function(i){TempEst(i,5000)}
  ) |> 
  bind_rows(
    map_dfr(
  1:1000,
  function(i){TempEst(i,100)}
  )
  ) |> 
  ggplot(
    aes(
      x = MeanU
      )
    ) +
  theme_bw() +
  geom_vline(xintercept = 0) +
  geom_histogram() +
  facet_grid(N~ G) +
  xlim(-30,30)
```

