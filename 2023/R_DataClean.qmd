---
title: "Example"
format: html
execute: 
  warning: false
  message: false
---

# SetUp

```{r SetUp}
set.seed(149)
pacman::p_load(
  tidyverse,
  recipes,
  outForest,
  mlr3verse,
  mlr3pipelines
)
```


# Learner

```{r SetLearner}
RegLM <- lrn(
  "regr.lm",
  id = "RegLM"
  )

RegRF <- lrn(
  "regr.ranger",
  id = "RefRF"
  )

RegStack <- pipeline_stacking(
  list(
    RegRF,
    RegLM
  ), 
  lrn(
    "regr.lm",
    id = "SuperLearner"
  ),
  use_features = FALSE,
  folds = 5) |> 
  as_learner()
```


# Data

```{r CleanData}
TargetStructure <- c("ＳＲＣ","ＲＣ")

TargetRoom <- c("オープンフロア","スタジオ","メゾネット")

Raw <- arrow::read_parquet("~/Dropbox/DataClean/RetailJPN/AllPrefectture.parquet") |> 
  filter(今後の利用目的 == "住宅") |> 
  filter(用途 == "住宅") |> 
  filter(改装 != "") |> 
  filter(間取り != "") |> 
  filter(都市計画 != "") |> 
  filter(最寄駅.名称 != "") |> 
  filter(都道府県名 == "東京都") |> 
  filter(str_detect(市区町村名, "区")) |> 
  filter(建物の構造 %in% TargetStructure) |> 
  filter(!(間取り %in% TargetRoom)) |> 
  mutate(TradePeriod = str_sub(取引時点,1,4) |> 
           as.numeric()
         ) |> 
  filter(TradePeriod %in% c(2017,2021)) |> 
  mutate(
    TempBuildYear = 
      str_sub(建築年,3,-2) |> 
      as.numeric(),
    TempGengo = str_sub(建築年,1,2)
    ) |> 
  mutate(
    BuildYear = if_else(
      TempGengo == "令和",
      TempBuildYear + 2018,
      TempBuildYear
      )
  ) |> 
  mutate(
    BuildYear = if_else(
      TempGengo == "平成",
      TempBuildYear + 1988,
      BuildYear
      )
  ) |> 
  mutate(
    BuildYear = if_else(
      TempGengo == "昭和",
      TempBuildYear + 1925,
      BuildYear
      )
  ) |> 
  mutate(
    Price = 取引価格.総額./(10^6),
    Tenure = TradePeriod - BuildYear,
    DistanceStation = 最寄駅.距離.分. |> as.numeric(),
    Size = 面積... |> as.numeric(),
    Youseki = 容積率... |> as.numeric(),
    Kenpei = 建ぺい率... |> as.numeric(),
    RoomNum = if_else(str_detect(間取り,"１"),1,0),
    RoomNum = if_else(str_detect(間取り,"２"),2,RoomNum),
    RoomNum = if_else(str_detect(間取り,"３"),3,RoomNum),
    RoomNum = if_else(str_detect(間取り,"４"),4,RoomNum),
    RoomNum = if_else(str_detect(間取り,"５"),5,RoomNum),
    RoomNum = if_else(str_detect(間取り,"６"),6,RoomNum),
    ZoneHouse = if_else(str_detect(都市計画,"住居"),1,0),
    ZoneBusiness = if_else(str_detect(都市計画,"商業"),1,0),
    ZoneFactory = if_else(str_detect(都市計画,"工業"),1,0),
    RoomL = if_else(str_detect(間取り,"Ｌ"),1,0),
    RoomD = if_else(str_detect(間取り,"Ｄ"),1,0),
    StructureSRC = if_else(建物の構造 == "ＳＲＣ",1,0),
    After = if_else(
      TradePeriod == 2021,
        1,
        0
    ),
    Reform = if_else(改装 == "改装済",1,0),
    District = 市区町村コード |> 
      factor()
  ) |> 
  select(Price:District) |> 
  na.omit()

Data <- recipe(
  ~.,
  Raw
  ) |> 
  step_mutate(
    Price = Price |> log()
  ) |> 
  step_dummy(
    District,
    one_hot = TRUE
  ) |> 
  prep() |> 
  bake(new_data = NULL)

Data |> write_csv("Public/Example.csv")

Data |> arrow::write_parquet("Public/Example.parquet")

arrow::read_parquet("Public/Example.parquet")

Group <- sample(
  1:3,
  nrow(Data),
  replace = TRUE
  )

X <- Data |> 
  select(
    -After,
    -Price
  )

Z <- Data |> 
  select(
    -starts_with("Dist")
  )

NameX <- names(X)

Y <- Data$Price

D <- Data$After
```

# Estimation

```{r}
FitOutForest <- outForest(
  X)

CleanData <- Data(FitOutForest) |> 
  mutate(
    Price = Y,
    After = D
  )|> na.omit()

summary(Data)

summary(CleanData)
```


# Comparison

```{r}
TaskClean <- as_task_regr(
  CleanData |> select(-Price),
  target = "After",
  id = "CleanData"
  )

TaskOriginal <- as_task_regr(
  Data |> select(-Price),
  target = "After",
  id = "OriginalData"
  )



```


## Comparison

```{r Estimation}
Design <- benchmark_grid(
  tasks = list(
    TaskClean,
    TaskOriginal
  ),
  learners = list(
    RegLM$clone(),
    RegRF$clone(),
    RegStack$clone()
  ),
  resamplings = rsmp(
    "holdout",
    ratio = 1/3)
)

future::plan("multisession") # 並列処理

BenchMark <- benchmark(Design)

BenchMark$aggregate(msr("regr.rsq"))
```
